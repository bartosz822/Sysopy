cmake_minimum_required(VERSION 2.8)
project(lista)

set(CMAKE_C_STANDARD 11)
option(SHARED "Compile shared option" OFF)
option(DYNAMIC "Compile dynamic version" OFF)
option(ALL "Compile all options" OFF)
option(OPTIMIZATION "Optimization level" )


set(LIBS list.c list.h person.c person.h tree.c tree.h tester.c tester.h)

macro(shared)
    add_library(shared_lib SHARED ${LIBS})
    add_executable(tester_shared main.c)
    target_link_libraries(tester_shared shared_lib)
    target_compile_options(shared_lib PUBLIC -o${OPTIMIZATION})
    target_compile_options(tester_shared PUBLIC -o${OPTIMIZATION})
endmacro(shared)

macro(static)
    add_library(static_lib STATIC ${LIBS})
    add_executable(tester_static main.c )
    target_link_libraries(tester_static static_lib)
    target_compile_options(static_lib PUBLIC -o${OPTIMIZATION})
    target_compile_options(tester_static PUBLIC -o${OPTIMIZATION})
endmacro(static)

macro(dynamic)
    if(NOT ALL)
        add_library(shared_lib SHARED ${LIBS})
    endif()
    add_executable(tester_dynamic main_dynamic.c)
    target_compile_options(shared_lib PUBLIC -o${OPTIMIZATION})
    target_compile_options(tester_dynamic PUBLIC -o${OPTIMIZATION} -ldl)
    target_link_libraries(tester_dynamic ${CMAKE_DL_LIBS})
endmacro(dynamic)

if (SHARED)
    shared()
elseif(DYNAMIC)
    dynamic()
elseif(ALL)
    shared()
    static()
    dynamic()
else(SHARED)
    static()
endif (SHARED)
